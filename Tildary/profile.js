function getCurrentUser() {
    return localStorage.getItem("currentUserEmail");
}

function getUsers() {
    return JSON.parse(localStorage.getItem("users")) || [];
}

function updateProfileButton() {
    let currentUser = getCurrentUser();
    const profileMenu = document.getElementById("profileMenu");

    if (currentUser && profileMenu) {
        let users = getUsers();
        let user = users.find(u => u.email === currentUser);
        if (user) {
            profileMenu.textContent = user.name; 
        } else {
            profileMenu.textContent = "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"; 
        }
    }
}

function updateUserInfo() {
    let userLevel = localStorage.getItem("userLevel");

    if (!userLevel) return; // –ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ

    let userName = getName() || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
    let userEmail = localStorage.getItem("currentUserEmail") || "–ù–µ—Ç email";
    let studyDays = localStorage.getItem("studyDays") || 0;
    let lessonsCompleted = localStorage.getItem("lessonsCompleted") || 0;
    let totalLessons = 10;
    let progress = Math.round((lessonsCompleted / totalLessons) * 100);

    $("#userNameDisplay").text(userName);
    $("#userEmailDisplay").text(userEmail);
    $("#userLevelDisplay").text(userLevel);
    $("#studyDays").text(studyDays);
    $("#lessonsCompleted").text(`${lessonsCompleted}/${totalLessons}`);
    $("#courseProgress").text(`${progress}%`);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
    if (lessonsCompleted >= totalLessons) {
        $("#nextLesson").text("üéâ –ö—É—Ä—Å –∑–∞–≤–µ—Ä—à—ë–Ω! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!");
    } else {
        $("#nextLesson").text(`üìñ –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫: –£—Ä–æ–∫ ${lessonsCompleted + 1}`);
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ü–∏—Ç–∞—Ç—É
    let motivationQuotes = [
        "–ë—ñ–ª—ñ–º ‚Äì –µ“£ –º—ã“õ—Ç—ã “õ–∞—Ä—É.",
        "–ï“£–±–µ–∫ –µ—Ç—Å–µ“£ –µ—Ä—ñ–Ω–±–µ–π, —Ç–æ—è–¥—ã “õ–∞—Ä–Ω—ã“£ —Ç—ñ–ª–µ–Ω–±–µ–π.",
        "–ê“õ—ã–ª, “õ–∞–π—Ä–∞—Ç, –∂“Ø—Ä–µ–∫—Ç—ñ –±—ñ—Ä–¥–µ–π “±—Å—Ç–∞.",
        "“í—ã–ª—ã–º —Ç–∞–ø–ø–∞–π –º–∞“õ—Ç–∞–Ω–±–∞!",
        "–ë—ñ–ª—ñ–º–¥—ñ –º—ã“£–¥—ã –∂—ã“ì–∞—Ä, –±—ñ–ª–µ–∫—Ç—ñ –±—ñ—Ä–¥—ñ –∂—ã“ì–∞—Ä."
    ];
    let randomQuote = motivationQuotes[Math.floor(Math.random() * motivationQuotes.length)];
    $("#motivationQuote").text(`üí° ${randomQuote}`);
}

function updateProfileUI() {
    let userLevel = localStorage.getItem("userLevel");

    if (!userLevel) return;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    $("#userLevelDisplay").text(userLevel);
    $("#courseTitle").text(`–í–∞—à –∫—É—Ä—Å (${userLevel})`);
    $("#courseDescription").text("–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Ä–æ–∫–∞–º!");

    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫
    $(".lesson-card").each(function (index) {
        if (index === 0) {
            $(this).removeClass("locked").find("p").text("–î–æ—Å—Ç—É–ø–Ω–æ ‚úÖ");
        } else {
            $(this).find("p").text("üîí –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ–∑–∂–µ");
        }
    });

    $("#testButton").hide(); 

    $(".lesson-card.locked").each(function() {
    $(this).css("position", "relative") 
           .append("<style>.lesson-card.locked::after { content: none !important; }</style>");


});

}

function getName() {
    let users = JSON.parse(localStorage.getItem('users'));
    let currentUser = getCurrentUser();

    for (let i = 0; i < users.length; i++) {
        if (users[i].email === currentUser) {
            return users[i].name;
        }
    }

    return;
}

$("#registerForm").submit(function (event) {
    event.preventDefault();
    
    var name = $("#registerName").val().trim();
    var email = $("#registerEmail").val().trim();
    var password = $("#registerPassword").val();

    if (password.length < 6) {
        alert("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤!");
        return;
    }

    var users = JSON.parse(localStorage.getItem("users")) || [];
    var emailExists = users.some(user => user.email.toLowerCase() === email.toLowerCase());

    if (emailExists) {
        alert("–≠—Ç–æ—Ç email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!");
        return;
    }

   
    users.push({ name: name, email: email, password: password });
    localStorage.setItem("users", JSON.stringify(users));
    localStorage.setItem("currentUserEmail", email);

    
    localStorage.removeItem("userLevel"); 

    window.location.href = "profile.html";
});



$(document).ready( function() {
    updateProfileButton();

    $("#exit").click(function (event) {
        event.preventDefault();
        localStorage.removeItem("currentUserEmail");
        localStorage.removeItem("userLevel");
        updateProfileButton(); 
        window.location.href = "main.html";
    });


    let currentQuestionIndex = 0;
    let userAnswers = [];

   
    const questions = [
       
        {
            text: "–ö–∞–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ '–ü—Ä–∏–≤–µ—Ç'?",
            options: ["–°”ô–ª–µ–º", "“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑", "–†–∞—Ö–º–µ—Ç", "–°–∞—É –±–æ–ª"],
            correct: 0
        },
        {
            text: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç '–ú–µ–Ω—ñ“£ –∞—Ç—ã–º ...' ?",
            options: ["–ö–∞–∫ –¥–µ–ª–∞?", "–ú–µ–Ω—è –∑–æ–≤—É—Ç ...", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å", "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è"],
            correct: 1
        },
        {
            text: "–ö–∞–∫–∞—è –±—É–∫–≤–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–∞–∑–∞—Ö—Å–∫–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–µ?",
            options: ["”ò", "–ò", "–Å", "”®"],
            correct: 2
        },
        {
            text: "–ö–∞–∫ —Å–∫–∞–∑–∞—Ç—å '–°–ø–∞—Å–∏–±–æ' –ø–æ-–∫–∞–∑–∞—Ö—Å–∫–∏?",
            options: ["–ö”©—Ä–¥—ñ“£ –±–µ", "–†–∞—Ö–º–µ—Ç", "–ö–µ–ª—ñ“£—ñ–∑", "–î–æ—Å"],
            correct: 1
        },
        {
            text: "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç '–ö”©–∫'?",
            options: ["–°–∏–Ω–∏–π", "–ö—Ä–∞—Å–Ω—ã–π", "–ñ—ë–ª—Ç—ã–π", "–ë–µ–ª—ã–π"],
            correct: 0
        },

        {
            text: "–ú”ô—Ç—ñ–Ω–Ω—ñ“£ –Ω–µ–≥—ñ–∑–≥—ñ –æ–π—ã “õ–∞–Ω–¥–∞–π? ", 
            textId: "text1",
            options: ["“ö–∞–∑–∞“õ —Ö–∞–ª“õ—ã–Ω—ã“£ —Ç–∞–±–∏“ì–∞—Ç“õ–∞ –¥–µ–≥–µ–Ω “õ“±—Ä–º–µ—Ç—ñ", "–¢–∞–±–∏“ì–∞—Ç—Ç—ã –∑–µ—Ä—Ç—Ç–µ—É–¥—ñ“£ –º–∞“£—ã–∑—ã", "–û—Ä–º–∞–Ω-—Ç–æ“ì–∞–π–ª–∞—Ä–¥—ã“£ —Å–∞–Ω—ã", "“ö–∞–∑–∞“õ —Ö–∞–ª“õ—ã–Ω—ã“£ ”©–º—ñ—Ä —Å–∞–ª—Ç—ã"],
            correct: 0
        },
        {
            text: "'–ö–∏–µ–ª—ñ' —Å”©–∑—ñ–Ω—ñ“£ –º–∞“ì—ã–Ω–∞—Å—ã “õ–∞–Ω–¥–∞–π?", 
            textId: "text1",
            options: ["“ö–∞—Å–∏–µ—Ç—Ç—ñ, –º–∞“£—ã–∑–¥—ã", "“ö–∞—É—ñ–ø—Ç—ñ, “õ–æ—Ä“õ—ã–Ω—ã—à—Ç—ã", "–ñ–∞–π, “õ–∞—Ä–∞–ø–∞–π—ã–º", "”®—Ç–ø–µ–ª—ñ, —É–∞“õ—ã—Ç—à–∞"],
            correct: 0
        },
        {
            text: "–ú”ô—Ç—ñ–Ω–¥–µ–≥—ñ '“õ“±–Ω–¥—ã–ª—ã“õ' —Å”©–∑—ñ–Ω–µ —Å–∏–Ω–æ–Ω–∏–º–¥—ñ —Ç–∞–±—ã“£—ã–∑.", 
            textId: "text1",
            options: ["–î”ô—Å—Ç“Ø—Ä", "–ë–∞“ì–∞–ª—ã –Ω”ô—Ä—Å–µ", "“ö–∏—ã–Ω–¥—ã“õ", "–ó–µ—Ä—Ç—Ç–µ—É"],
            correct: 1
        },
        {
            text: "–ê–≤—Ç–æ—Ä “õ–∞–Ω–¥–∞–π –æ–π–¥—ã –∂–µ—Ç–∫—ñ–∑–≥—ñ—Å—ñ –∫–µ–ª–µ–¥—ñ?",
            textId: "text1",
            options: ["“ö–∞–∑–∞“õ —Ö–∞–ª“õ—ã —Ç–∞–±–∏“ì–∞—Ç—Ç—ã –µ—Ä–µ–∫—à–µ “õ“±—Ä–º–µ—Ç—Ç–µ–≥–µ–Ω.", "–û—Ä–º–∞–Ω-—Ç–æ“ì–∞–π–ª–∞—Ä –∞–¥–∞–º ”©–º—ñ—Ä—ñ–Ω–µ –∑–∏—è–Ω.", "“ö–∞–∑–∞“õ —Ö–∞–ª“õ—ã–Ω—ã“£ —Ç“±—Ä–º—ã—Å—ã “õ–∏—ã–Ω –±–æ–ª“ì–∞–Ω.", "”®–∑–µ–Ω-–∫”©–ª–¥–µ—Ä —Ç–µ–∫ —à–∞—Ä—É–∞—à—ã–ª—ã“õ “Ø—à—ñ–Ω “õ–∞–∂–µ—Ç."],
            correct: 0
        },
        {
            text: "–ú”ô—Ç—ñ–Ω–≥–µ –µ“£ –∂–∞“õ—ã–Ω –º–∞“õ–∞–ª-–º”ô—Ç–µ–ª “õ–∞–Ω–¥–∞–π?", 
            textId: "text1",
            options: ["'–¢—É“ì–∞–Ω –∂–µ—Ä ‚Äì –∞–ª—Ç—ã–Ω –±–µ—Å—ñ–∫.'", "'–ë—ñ–ª–µ–∫—Ç—ñ –±—ñ—Ä–¥—ñ –∂—ã“ì–∞—Ä, –±—ñ–ª—ñ–º–¥—ñ –º—ã“£–¥—ã –∂—ã“ì–∞—Ä.'", "'–ö—ñ—Ç–∞–ø ‚Äì –±—ñ–ª—ñ–º –±“±–ª–∞“ì—ã.'", "'–ï“£–±–µ–∫ —Ç“Ø–±—ñ ‚Äì –±–µ—Ä–µ–∫–µ.'"],
            correct: 0
        },

        {
            text: "'“í—ã–ª—ã–º —Ç–∞–ø–ø–∞–π –º–∞“õ—Ç–∞–Ω–±–∞' ”©–ª–µ“£—ñ–Ω—ñ“£ –Ω–µ–≥—ñ–∑–≥—ñ –º–∞“ì—ã–Ω–∞—Å—ã “õ–∞–Ω–¥–∞–π?",
            options: ["“í—ã–ª—ã–º—Å—ã–∑ –º–∞“õ—Ç–∞–Ω—É –¥“±—Ä—ã—Å –µ–º–µ—Å", "–û“õ—É ”ô—Ä–¥–∞–π—ã–º “õ–∏—ã–Ω", "–ê–¥–∞–º –º–∞“õ—Ç–∞–Ω—É—ã –∫–µ—Ä–µ–∫", "“í—ã–ª—ã–º ‚Äì —Ç–µ–∫ –º“±“ì–∞–ª—ñ–º–¥–µ—Ä–≥–µ “õ–∞–∂–µ—Ç"],
            correct: 0
        },
        {
            text: "'–ê“õ—ã–ª, “õ–∞–π—Ä–∞—Ç, –∂“Ø—Ä–µ–∫—Ç—ñ –±—ñ—Ä–¥–µ–π “±—Å—Ç–∞' –∂–æ–ª—ã–Ω–¥–∞“ì—ã “õ–∞—Å–∏–µ—Ç—Ç–µ—Ä “õ–∞–Ω–¥–∞–π?",
            options: ["–ê“õ—ã–ª, –∫“Ø—à –∂”ô–Ω–µ –∂“Ø—Ä–µ–∫", "–ë–∞–π–ª—ã“õ, –±–∞“õ—ã—Ç, –º–∞–Ω—Å–∞–ø", "–û“õ—É, –æ–π—ã–Ω, –¥–µ–º–∞–ª—ã—Å", "–°“±–ª—É–ª—ã“õ, –º—ñ–Ω–µ–∑, –∫“Ø—à"],
            correct: 0
        },
        {
            text: "–ê–±–∞–π–¥—ã“£ “õ–∞–Ω–¥–∞–π —à—ã“ì–∞—Ä–º–∞—Å—ã “±–ª—Ç –±–æ–ª–∞—à–∞“ì—ã–Ω–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω?",
            options: ["“ö–∞—Ä–∞ —Å”©–∑–¥–µ—Ä", "–ê–±–∞–π –∂–æ–ª—ã", "–ë–∞–π“ì–∞–Ω–∏–Ω –ø–æ—ç–∑–∏—è—Å—ã", "–ú“±“õ–∞“ì–∞–ª–∏ –ú–∞“õ–∞—Ç–∞–µ–≤ ”©–ª–µ“£–¥–µ—Ä—ñ"],
            correct: 0
        },
        {
            text: "“ö–∞–∑–∞“õ —ç–ø–æ—Å—ã–Ω—ã“£ –Ω–µ–≥—ñ–∑–≥—ñ –∂–∞–Ω—Ä—ã “õ–∞–Ω–¥–∞–π?",
            options: ["–ü–æ—ç–∑–∏—è", "–¢–∞—Ä–∏—Ö–∏ —Ä–æ–º–∞–Ω", "–õ–µ–≥–µ–Ω–¥–∞", "–î—Ä–∞–º–∞"],
            correct: 2
        },
        {
            text: "–ê–±–∞–π –ø–æ—ç–∑–∏—è—Å—ã–Ω—ã“£ –Ω–µ–≥—ñ–∑–≥—ñ –∏–¥–µ—è—Å—ã “õ–∞–Ω–¥–∞–π?",
            options: ["–ë—ñ–ª—ñ–º –º–µ–Ω –µ“£–±–µ–∫—Ç—ñ –±–∞“ì–∞–ª–∞—É", "“ö—É–∞–Ω—ã—à ‚Äì ”©–º—ñ—Ä–¥—ñ“£ –º”ô–Ω—ñ", "–°–∞—è—Å–∞—Ç ‚Äì –µ“£ –º–∞“£—ã–∑–¥—ã –Ω”ô—Ä—Å–µ", "–®—ã“ì–∞—Ä–º–∞—à—ã–ª—ã“õ ‚Äì –∞–¥–∞–º –±–∞“õ—ã—Ç—ã"],
            correct: 0
        }
    ];

    function loadQuestion() {
        if (currentQuestionIndex >= questions.length) {
            console.log(10000);
            finishTest();
            return;
        }

        let question = questions[currentQuestionIndex];

       
        $("#questionText").html(question.text);

       
        $("#readingTextContent").empty();
        if (question.textId) {
            $("#readingTextContent").append($(`#${question.textId}`).html());
            $("#readingText").show();
        } else {
            $("#readingText").hide();
        }

       
        $("#answerOptions").empty();
        $.each(question.options, function (index, option) {
            let btn = $("<button>")
                .addClass("btn btn-outline-dark w-100")
                .text(option)
                .click(function () {
                    selectAnswer(index);
                });

            $("#answerOptions").append(btn);
        });
    }

    $("#testButton").click(function () {
        console.log("–ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∞ –Ω–∞–∂–∞—Ç–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å...");
        loadQuestion();
    });

    
    function selectAnswer(answerIndex) {
        userAnswers.push(answerIndex === questions[currentQuestionIndex].correct);
        currentQuestionIndex++;
        loadQuestion();
    }

    
    function finishTest() {
        let correctAnswers = userAnswers.filter(ans => ans).length;
        let userLevel = "–ù–∞—á–∏–Ω–∞—é—â–∏–π";
    
        if (correctAnswers > 5) userLevel = "–û—Ä—Ç–∞—à–∞";
        if (correctAnswers > 10) userLevel = "–≠–∫—Å–ø–µ—Ä—Ç";
    
        localStorage.setItem("userLevel", userLevel); 
        $("#userLevelText").text(`–í–∞—à —É—Ä–æ–≤–µ–Ω—å: ${userLevel}`);
    
      
        $("#testButton").hide();
        $("#testModal").modal("hide");
    
        setTimeout(function () {
            $("#resultModal").modal("show"); 
            updateProfileUI(); 
            updateButtonLink(userLevel); 
        }, 500);
    }

        $(document).ready(function() {
        let userLevel = localStorage.getItem("userLevel");

       
        if (!userLevel) {
            $("#startCourseButton").prop("disabled", true).text("–ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç");
        } else {
            updateButtonLink(userLevel); 
        }
    });

  
    function updateButtonLink(level) {
        let link = "#"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–≥–ª—É—à–∫–∞
        if (level === "–ù–∞—á–∏–Ω–∞—é—â–∏–π") link = "beginner-course.html";
        if (level === "–û—Ä—Ç–∞—à–∞") link = "intermediate-course.html";
        if (level === "–≠–∫—Å–ø–µ—Ä—Ç") link = "expert-course.html";

        $("#startCourseButton")
            .prop("disabled", false) // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            .attr("href", link) // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É
            .text("–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫—É—Ä—Å—É");


    }


    let userLevel = localStorage.getItem("userLevel");
    console.log(userLevel);

    if (!userLevel) {
        console.log("–¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—É—Å—Ç–æ–π");
        
        
        $("#courseTitle").text("–ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫—É—Ä—Å—ã");
        $("#courseDescription").text("–ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Ä–æ–∫–∞–º.");

        
        $("#userLevelDisplay").text("–ù–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω");
        $("#userNameDisplay").text("");
        $("#userEmailDisplay").text("");
        $("#studyDays").text("");
        $("#lessonsCompleted").text("");
        $("#courseProgress").text("");

        
        $("#testButton").show();

    } else {
        
        updateProfileUI();
    }

    updateUserInfo();





});





$(document).ready(function () {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const currentUserEmail = localStorage.getItem("currentUserEmail");
    if (!currentUserEmail) {
        window.location.href = "main.html";
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
    $('[data-bs-toggle="tooltip"]').tooltip();

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    function getUserData(email) {
        const users = JSON.parse(localStorage.getItem("users")) || [];
        return users.find(user => user.email === email) || {};
    }

    let userData = getUserData(currentUserEmail);

    $("#userNameDisplay").text(userData.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");
    $("#userEmailDisplay").text(userData.email || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");
    $("#userLevelDisplay").text(userData.level || "–ù–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω");
    $("#studyDays").text(userData.studyDays || 0);
    $("#lessonsCompleted").text(`${userData.lessonsCompleted || 0}/10`);
    $("#courseProgress").text(`${userData.progress || 0}%`);

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è
    $("#saveSettings").click(function () {
        const newUsername = $("#newUsername").val();
        const newPassword = $("#newPassword").val();

        if (newUsername) {
            userData.name = newUsername;
            $("#userNameDisplay").text(newUsername);
        }

        if (newPassword) {
            alert("–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω! (–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ–Ω –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ API)");
        }

        localStorage.setItem("users", JSON.stringify([...JSON.parse(localStorage.getItem("users")) || [], userData]));
        alert("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
    });

    // –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
    $("#exit").click(function () {
        localStorage.removeItem("currentUserEmail");
        window.location.href = "main.html";
    });

    // –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—Ä–æ–∫–æ–≤
    function updateLessonCards() {
        $(".lesson-card").each(function (index) {
            if (index < (userData.lessonsCompleted || 0)) {
                $(this).removeClass("locked").click(function () {
                    alert(`–û—Ç–∫—Ä—ã—Ç —É—Ä–æ–∫ ${index + 1}`);
                });
            }
        });
    }
    updateLessonCards();

    // –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞
    const quotes = [
        "”®–∑—ñ“£–µ —Å–µ–Ω, –∂–µ“£–µ—Ä—ñ“£–µ —Å–µ–Ω!",
        "–ë—ñ–ª—ñ–º ‚Äì –µ“£ –º—ã“õ—Ç—ã “õ–∞—Ä—É.",
        "–¢–∞–ª–∞–ø—Ç—ã“ì–∞ –Ω“±—Ä –∂–∞—É–∞—Ä.",
        "–ï“£–±–µ–∫ —Ç“Ø–±—ñ ‚Äì –±–µ—Ä–µ–∫–µ.",
        "–ë—ñ—Ä–ª—ñ–∫ —Ç“Ø–±—ñ ‚Äì —Ç—ñ—Ä–ª—ñ–∫.",
        "–ê“õ—ã–ª –∞–∑–±–∞–π–¥—ã, –±—ñ–ª—ñ–º —Ç–æ–∑–±–∞–π–¥—ã."
    ];
    $("#motivationQuote").text(quotes[Math.floor(Math.random() * quotes.length)]);

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    window.nextQuestion = function () {
        alert("–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å —Ç–µ—Å—Ç–∞ (–Ω—É–∂–Ω–∞ –ª–æ–≥–∏–∫–∞ —Å–º–µ–Ω—ã –≤–æ–ø—Ä–æ—Å–æ–≤)");
    };

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    function updateUserLevel(level) {
        userData.level = level;
        $("#userLevelDisplay").text(level);
        localStorage.setItem("users", JSON.stringify([...JSON.parse(localStorage.getItem("users")) || [], userData]));
    }
}); 

